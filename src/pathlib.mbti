package xunyoyo/pathlib

alias @moonbitlang/core/immut/list as @list
alias @moonbitlang/core/strconv as @strconv

// Values
fn path(String) -> Path!@strconv.StrConvError

fn to_path(Array[String]) -> @list.T[String]

// Types and methods
pub(all) enum Path {
  WinPath(WPath)
  UnixPath(UPath)
}
impl Path {
  anchor(Self) -> String
  as_posix(Self) -> String
  drive(Self) -> String
  ends_with(Self, Self) -> Bool
  extension(Self) -> String
  file_name(Self) -> String
  file_prefix(Self) -> String
  file_stem(Self) -> String
  has_root(Self) -> Bool
  is_absolute(Self) -> Bool
  is_relative(Self) -> Bool
  join(Self, Self) -> Self
  parent(Self) -> Self
  parents(Self) -> Array[Self]
  root(Self) -> String
  starts_with(Self, Self) -> Bool
  strip_prefix(Self, Self) -> Self!PrefixError
  unix_path(Self) -> String
  win_path(Self) -> String
  with_added_extension(Self, String) -> Self
  with_extension(Self, String) -> Self
  with_file_name(Self, String) -> Self
}
impl Eq for Path
impl Show for Path

type PrefixError

type UPath
impl Eq for UPath

type WPath
impl Eq for WPath

// Type aliases

// Traits

